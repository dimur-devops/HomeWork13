---
- name: Create a sandbox instance
  hosts: localhost
  gather_facts: False
  vars:
    keypair: keyhm13
    instance_type: t2.micro
    security_group: EC2SecHW13
    image: ami-05f7491af5eef733a 
    region: eu-central-1

  tasks:
  
    - name: Launch instance builder
      ec2:
         key_name: "{{ keypair }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         exact_count: 1
         count_tag:
            Name: builder
         instance_tags:
            Name: builder
         region: "{{ region }}"
         vpc_subnet_id: subnet-091b77ec80fbbe12d
         assign_public_ip: yes
      register: ec2_builder

    - name: Launch instance application
      ec2:
         key_name: "{{ keypair }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         exact_count: 1
         count_tag:
            Name: application
         instance_tags:
            Name: application
         region: "{{ region }}"
         vpc_subnet_id: subnet-091b77ec80fbbe12d
         assign_public_ip: yes
      register: ec2_application


    - name: Add build instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        ansible_ssh_private_key_file: /root/.ssh/my-key.pem
        groupname: builder
      loop: "{{ ec2_builder.instances }}"

    - name: Add app instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        ansible_ssh_private_key_file: /root/.ssh/my-key.pem
        groupname: application
      loop: "{{ ec2_application.instances }}"

    - name: Wait for SSH to come up
#      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 60
        timeout: 320
      loop: 
        "{{ ec2_builder.instances }}"
        "{{ ec2_aplication.instances }}"



- name: Configure instance
  hosts: builder
  become: yes
  gather_facts: True

  tasks:

  - name: Ensure aws package is present
    apt:
      name: awscli
      state: present
  - name: Ensure git package is present
    apt:
      name: git
      state: present
  - name: Ensure maven package is present
    apt:
      name: maven
      state: present
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /tmp/homework8
      state: directory
      mode: '0755'
  - name: Clone a repo with separate git directory
    ansible.builtin.git:
      repo: https://github.com/boxfuse/boxfuse-sample-java-war-hello.git
      dest: /tmp/homework8/boxfuse-sample-java-war-hello
      clone: yes
      update: yes
  - name: Maven install package
    shell: mvn package -f /tmp/homework8/boxfuse-sample-java-war-hello
  - name: Copy war to s3
    amazon.aws.aws_s3:
      bucket: mybacket.dimamuro.com
      object: /hello-1.0.war
      src: /tmp/homework8/boxfuse-sample-java-war-hello/target/hello-1.0.war
      mode: put


- name: Configure instance
  hosts: application
  become: yes
  gather_facts: True

 tasks:

  - name: Ensure aws package is present
    apt:
      name: awscli
      state: present
  - name: Install OpenJDK
    apt:
      name: openjdk-11-jre-headless
  - name: download tomcat server packages
    get_url:
      url: https://mirrors.estointernet.in/apache/tomcat/tomcat-9/v9.0.54/bin/apache-tomcat-9.0.54.tar.gz
      dest: /usr/local
  - name: extract tomcat packages
    unarchive:
      src: /usr/local/apache-tomcat-9.0.54.tar.gz
      dest: /usr/local
      remote_src: yes
  - name: Copy war from s3 to the Tomcat webapps
    amazon.aws.aws_s3:
      bucket: mybacket.dimamuro.com
      object: /hello-1.0.war
      dest: /usr/local/apache-tomcat-9.0.54/webapps/hello-1.0.war
      mode: get
  - name: start tomcat services
    shell: nohup /usr/local/apache-tomcat-9.0.54/bin/startup.sh
